{
  "author" : "LoCalm",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "cloud",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "cloud" : {
      "name" : "cloud",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport cn.hutool.core.bean.BeanUtil;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport $!{tableInfo.savePackageName}.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.wrapper.$!{tableInfo.name}Wrapper;\nimport com.imtristone.core.boot.ctrl.TristoneController;\nimport com.imtristone.core.log.annotation.ApiLog;\nimport com.imtristone.core.mp.support.Condition;\nimport com.imtristone.core.mp.support.Query;\nimport com.imtristone.core.tool.api.R;\nimport io.swagger.annotations.Api;\nimport lombok.AllArgsConstructor;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.Map;\nimport java.util.Set;\n\n/**\n * $!{tableInfo.comment} 控制层\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@RestController\n@AllArgsConstructor\n@RequestMapping(\"/$!tool.firstLowerCase($tableInfo.name)\")\n@Api(value = \"$!{tableInfo.comment}\", tags = \"$!{tableInfo.comment}接口\")\npublic class $!{tableName} extends TristoneController {\n\n    private $!{tableInfo.name}Service service;\n\n\n    @GetMapping(\"/{id}\")\n    @ApiLog(\"$!{tableInfo.comment}-详情\")\n    public R<$!{tableInfo.name}Entity> getById(@PathVariable Long id) {\n        return R.data($!{tableInfo.name}Wrapper.build().entityVO(BeanUtil.copyProperties(service.getById(id), $!{tableInfo.name}VO.class)));\n    }\n\n    @GetMapping\n    @ApiLog(\"$!{tableInfo.comment}-分页\")\n    public R<IPage<$!{tableInfo.name}VO>> page(@RequestParam Map<String, Object> params, Query query) {\n        return R.data($!{tableInfo.name}Wrapper.build().pageVO(service.page(Condition.getPage(query), Condition.getQueryWrapper(params, $!{tableInfo.name}Entity.class)).convert(mapper -> BeanUtil.copyProperties(mapper, $!{tableInfo.name}VO.class))));\n    }\n\n    @PostMapping\n    @ApiLog(\"$!{tableInfo.comment}-新增\")\n    public R<Boolean> save(@RequestBody $!{tableInfo.name}Entity entity) {\n        return R.status(service.save(entity));\n    }\n    \n    @PutMapping\n    @ApiLog(\"$!{tableInfo.comment}-修改\")\n    public R<Boolean> updateById(@RequestBody $!{tableInfo.name}Entity entity) {\n        return R.status(service.updateById(entity));\n    }\n\n    @DeleteMapping(\"/{ids}\")\n    @ApiLog(\"$!{tableInfo.comment}-删除\")\n    public R<Boolean> removeByIds(@PathVariable Set<Long> ids) {\n        return R.status(service.removeByIds(ids));\n    }\n\n}\n"
      }, {
        "name" : "wrapper.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Wrapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/wrapper\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}wrapper;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.imtristone.format.util.FormatUtil;\nimport $!{tableInfo.savePackageName}.vo.$!{tableInfo.name}VO;\nimport org.jetbrains.annotations.Contract;\nimport org.jetbrains.annotations.NotNull;\n\n/**\n * $!{tableInfo.comment} 包装类,返回视图层所需的字段\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\npublic class $!{tableName} {\n\n    @NotNull\n    @Contract(value = \" -> new\", pure = true)\n    public static $!{tableInfo.name}Wrapper build() {\n        return new $!{tableInfo.name}Wrapper();\n    }\n\n    public $!{tableInfo.name}VO entityVO($!{tableInfo.name}VO vo) {\n        return FormatUtil.format(vo);\n    }\n\n    public IPage<$!{tableInfo.name}VO> pageVO(@NotNull IPage<$!{tableInfo.name}VO> page) {\n        return page.setRecords(FormatUtil.format(page.getRecords()));\n    }\n\n}\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Service\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport com.imtristone.core.mp.base.BizService;\n\n/**\n * $!{tableInfo.comment} 服务类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\npublic interface $!{tableName} extends BizService<$!{tableInfo.name}Entity> {\n}\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"ServiceImpl\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.imtristone.core.mp.base.BizServiceImpl;\nimport org.springframework.stereotype.Service;\n\n/**\n * $!{tableInfo.comment} 服务实现类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@Service\npublic class $!{tableName} extends BizServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}Entity> implements $!{tableInfo.name}Service {\n}\n"
      }, {
        "name" : "mapper.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Mapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\n\n/**\n * $!{tableInfo.comment} Mapper 接口\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\npublic interface $!{tableInfo.name}Mapper extends BaseMapper<$!{tableInfo.name}Entity> {\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Mapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".xml\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n  \n    <sql id=\"getPage\">\n        SELECT #foreach($column in $tableInfo.fullColumn)$tool.hump2Underline($!{column.name})#if($foreach.count != $tableInfo.fullColumn.size()), #end#end FROM $tool.hump2Underline(${tableInfo.name})\n    </sql>\n\n    <select id=\"getPage\" resultType=\"$!{tableInfo.savePackageName}.vo.$!{tableInfo.name}VO\">\n        <include refid=\"getPage\" />\n        ${ew.customSqlSegment}\n    </select>\n\n    <select id=\"getId\" resultType=\"$!{tableInfo.savePackageName}.vo.$!{tableInfo.name}VO\">\n        <include refid=\"getPage\" />\n        WHERE id = #{id}\n    </select>\n\n\n</mapper>\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Entity\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/entity\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}entity;\n\n##使用全局变量实现默认包导入\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.imtristone.core.mp.base.BizEntity;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n$!{autoImport.vm}\n\n/**\n * $!{tableInfo.comment} 实体类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@Data\n@TableName(\"$tool.hump2Underline(${tableInfo.name})\")\n@ApiModel(value = \"$!{tableInfo.name}对象\", description = \"$!{tableInfo.comment}\")\n@EqualsAndHashCode(callSuper = true)\npublic class $!{tableName} extends BizEntity {\n\n#foreach($column in $tableInfo.fullColumn)\n#if(\n    $!{column.name} != \"id\" && \n    $!{column.name} != \"createTime\" && \n    $!{column.name} != \"createUser\" && \n    $!{column.name} != \"createDept\" && \n    $!{column.name} != \"updateTime\" && \n    $!{column.name} != \"updateUser\" && \n    $!{column.name} != \"tenantId\"\n)\n    @ApiModelProperty(\"${column.comment}\")\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n#end\n\n}\n"
      }, {
        "name" : "vo.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"VO\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/vo\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}vo;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport lombok.EqualsAndHashCode;\nimport lombok.Data;\n\n/**\n * $!{tableInfo.comment} 视图实体类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@Data\n@EqualsAndHashCode(callSuper = true)\npublic class $!{tableName} extends $!{tableInfo.name}Entity {\n}\n"
      }, {
        "name" : "api.js.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"api\", \".js\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/vue\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\nimport request from '@/router/axios'\n\nconst BASE_API = '/api/im-tristone-/$!tool.firstLowerCase($tableInfo.name)'\n\nexport const getPage = params => request.get(`${BASE_API}`, {params})\nexport const getById = id => request.get(`${BASE_API}/${id}`)\nexport const save = data => request.post(`${BASE_API}`, data)\nexport const updateById = data => request.put(`${BASE_API}`, data)\nexport const removeByIds = ids => request.delete(`${BASE_API}/${ids}`)"
      }, {
        "name" : "index.vue.vm",
        "code" : "##定义初始变量$refs.crud.DIC[`${item.prop}`]\n#set($dic = $tool.append(\"$refs.crud.DIC\",$tool.append(\"[\",$tool.append(\"`\",$tool.append(\"${col.field}\",$tool.append(\"`\",\"]\"))))))\n#set($select-option-dic = $tool.append(\"$refs.crud.DIC\",$tool.append(\"[\",$tool.append(\"`\",$tool.append(\"$\",$tool.append(\"{col.searchOption.searchField || col.field}\",$tool.append(\"`\",\"]\")))))))\n#set($question-mark = \"?\")\n#set($oblique-point = \"`\")\n#set($dollar-sign = \"$\")\n##设置回调\n$!callback.setFileName($tool.append(\"index\", \".vue\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/vue\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n<template>\n  <basic-container>\n    <div style=\"height: calc(100vh - 115px)\">\n      <vxe-crud\n        ref=\"crud\"\n        v-model=\"form\"\n        :data=\"data\"\n        :option=\"option\"\n        :before-open=\"beforeOpen\"\n        @row-save=\"rowSave\"\n        @row-update=\"rowUpdate\"\n        @row-del=\"rowDel\"\n      >\n        <!-- 表格顶部-左 -->\n        <template #toolBarLeft=\"{ size }\">\n          <el-button\n            v-if=\"permissionList.addBtn\"\n            icon=\"el-icon-plus\"\n            type=\"primary\"\n            :size=\"size\"\n            @click=\"$refs.crud.rowAdd()\"\n          >\n            新 增\n          </el-button>\n          <el-button\n            v-if=\"permissionList.delBtn\"\n            icon=\"el-icon-delete\"\n            type=\"danger\"\n            :size=\"size\"\n            plain\n            :disabled=\"!selectionList.length\"\n            @click=\"handleDelete\"\n          >\n            删 除\n          </el-button>\n        </template>\n\n        <!-- 表格顶部-右 -->\n        <template #toolBarRight=\"{ size }\">\n          <el-tooltip :enterable=\"false\" content=\"清空筛选\" placement=\"bottom\">\n            <el-button icon=\"el-icon-refresh-right\" type=\"danger\" :size=\"size\" circle plain @click=\"onSearchReset\"/>\n          </el-tooltip>\n          <el-tooltip :enterable=\"false\" content=\"刷新\" placement=\"bottom\">\n            <el-button icon=\"el-icon-refresh\" :size=\"size\" circle @click=\"onSearch\"/>\n          </el-tooltip>\n        </template>\n\n        <!-- 自定义列头 -->\n        <template v-for=\"col in leafColumns\" #[`${col.field}Header`]=\"slotProps\">\n          <div class=\"vxe-header-search\" :key=\"col.field\">\n            <span>{{ slotProps.column.title }}</span>\n            <div v-if=\"validatenull(col.searchOption)\" class=\"vxe-header-search__empty\">\n              <i class=\"el-icon-warning-outline\"></i>\n              <span>暂无搜索项</span>\n            </div>\n            <div class=\"vxe-header-search__content\" v-else @click.stop>\n              <el-input-number\n                v-if=\"col.searchOption.type === 'number'\"\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                placeholder=\"请输入\"\n                controls-position=\"right\"\n                :size=\"slotProps.size\"\n                style=\"width: 100%\"\n                @keyup.enter.native=\"onSearch\"\n              />\n              <el-select\n                v-else-if=\"['radio', 'select', 'switch'].includes(col.searchOption.type)\"\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                :remote=\"col.searchOption.remote\"\n                :filterable=\"col.searchOption.filterable\"\n                :size=\"slotProps.size\"\n                placeholder=\"请选择\"\n                clearable\n                @change=\"onSearch\"\n              >\n                <el-option\n                  v-for=\"subItem in $!{select-option-dic} || []\"\n                  :label=\"subItem[col.searchOption.props.label || 'dictValue']\"\n                  :value=\"subItem[col.searchOption.props.value || 'dictKey']\"\n                  :key=\"subItem[col.searchOption.props.value || 'dictKey']\"\n                >\n                </el-option>\n              </el-select>\n              <el-date-picker\n                v-else-if=\"['datetime'].includes(col.searchOption.type)\"\n                class=\"crud-header-date-range\"\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                type=\"daterange\"\n                start-placeholder=\"开始时间\"\n                end-placeholder=\"结束时间\"\n                :size=\"slotProps.size\"\n                :value-format=\"col.searchOption.valueFormat || 'timestamp'\"\n                :default-time=\"['00:00:00', '23:59:59']\"\n                clearable\n                style=\"width: 100%\"\n                @change=\"onSearch\"\n              />\n              <el-date-picker\n                v-else-if=\"['date'].includes(col.searchOption.type)\"\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                type=\"date\"\n                placeholder=\"选择时间\"\n                :size=\"slotProps.size\"\n                :format=\"col.searchOption.format || 'yyyy-MM-dd'\"\n                :value-format=\"col.searchOption.valueFormat || 'timestamp'\"\n                clearable\n                style=\"width: 100%\"\n                @change=\"onSearch\"\n              />\n              <el-date-picker\n                v-else-if=\"['month'].includes(col.searchOption.type)\"\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                type=\"month\"\n                placeholder=\"选择时间\"\n                :size=\"slotProps.size\"\n                clearable\n                :format=\"col.searchOption.format || 'yyyy-MM'\"\n                :value-format=\"col.searchOption.valueFormat || 'timestamp'\"\n                style=\"width: 100%\"\n                @change=\"onSearch\"\n              />\n              <avue-input-tree\n                v-else-if=\"col.searchOption.type === 'tree'\"\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                :props=\"col.searchOption.props\"\n                :dic=\"$!{dic} || []\"\n                :multiple=\"col.searchOption.multiple\"\n                :checkStrictly=\"col.searchOption.checkStrictly\"\n                :parent=\"col.searchOption.parent\"\n                :size=\"slotProps.size\"\n                placeholder=\"请选择\"\n                clearable\n              />\n              <el-input\n                v-else\n                v-model=\"query[col.searchOption.searchField || col.field]\"\n                placeholder=\"请输入\"\n                :size=\"slotProps.size\"\n                clearable\n                @keyup.enter.native=\"onSearch\"\n                @clear=\"onSearch\"\n              />\n            </div>\n          </div>\n        </template>\n\n        <!-- 操作栏按钮自定义 -->\n        <template #operate=\"{ row, index }\">\n          <el-tooltip v-if=\"permissionList.viewBtn\" :enterable=\"false\" content=\"查看详情\" placement=\"bottom\">\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-view\"\n              size=\"mini\"\n              plain\n              circle\n              @click.stop=\"$refs.crud.rowView(row, index)\"\n            />\n          </el-tooltip>\n          <el-tooltip v-if=\"permissionList.editBtn\" :enterable=\"false\" content=\"编辑\" placement=\"bottom\">\n            <el-button\n              type=\"success\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              plain\n              circle\n              @click.stop=\"$refs.crud.rowEdit(row, index)\"\n            />\n          </el-tooltip>\n          <el-tooltip v-if=\"permissionList.delBtn\" :enterable=\"false\" content=\"删除\" placement=\"bottom\">\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              plain\n              circle\n              @click.stop=\"$refs.crud.rowDel(row, index)\"\n            />\n          </el-tooltip>\n        </template>\n      </vxe-crud>\n    </div>\n  </basic-container>\n</template>\n<script>\nimport {mapGetters} from 'vuex'\nimport {getById, getPage, removeByIds, save, updateById} from './api'\nimport {genOption} from './option'\n\nexport default {\n  data() {\n    return {\n      query: {},\n      form: {},\n      data: [],\n      selectionList: [],\n      option: genOption(this),\n    }\n  },\n\n  computed: {\n    ...mapGetters(['permission']),\n    permissionList() {\n      return {\n        addBtn: true,\n        editBtn: true,\n        delBtn: true,\n        viewBtn: true\n      }\n    },\n    ids() {\n      return this.selectionList.map(item => item.id)\n    },\n    leafColumns() {\n      const result = []\n      const columns = this.option.gridColumns\n      const stack = [...columns]\n      while (stack.length) {\n        const el = stack.pop()\n        Array.isArray(el.children) ? stack.push(...el.children) : result.push(el)\n      }\n      return result\n    },\n  },\n  \n  mounted() {\n    this.onSearch()\n  },\n\n  methods: {\n    beforeOpen(done, type) {\n      if (['edit', 'view'].includes(type)) {\n        getById(this.form.id).then(res => {\n          this.form = res.data.data\n          done()\n        })\n      } else {\n        done()\n      }\n    },\n    rowSave(row, done, loading) {\n      save(row).then(\n        () => {\n          this.onSearch()\n          this.$message.success('操作成功!')\n          done()\n        },\n        error => {\n          loading()\n          console.log(error)\n        }\n      )\n    },\n    rowUpdate(row, index, done, loading) {\n      updateById(row).then(\n        () => {\n          this.onSearch()\n          this.$message.success('操作成功!')\n          done()\n        },\n        error => {\n          loading()\n          console.log(error)\n        }\n      )\n    },\n    onYesOrNoSwitch(row, field, newVal) {\n      this.option.gridOption.loading = true\n      updateById({id: row.id, [field]: newVal}).then(\n        () => {\n          this.onSearch()\n          this.$message.success('操作成功!')\n        },\n        error => {\n          this.option.gridOption.loading = false\n          row[field] = !newVal\n          console.log(error)\n        }\n      )\n    },\n    rowDel(row) {\n      this.$confirm('确定将选择数据删除?', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          return removeByIds(row.id)\n        })\n        .then(() => {\n          this.onSearch()\n          this.$message.success('操作成功!')\n        })\n    },\n    handleDelete() {\n      this.$confirm('确定将选择数据删除?', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          return removeByIds(this.ids)\n        })\n        .then(() => {\n          this.onSearch()\n          this.$message.success('操作成功!')\n        })\n    },\n    selectionClear() {\n      this.selectionList = []\n      this.$refs.crud.toggleCheckboxSelection()\n    },\n    onSearch() {\n      this.option.gridOption.pagerConfig.currentPage = 1\n      this.onLoad({}, true)\n    },\n    // 查询条件重置\n    onSearchReset() {\n      this.query = {}\n      this.option.gridOption.pagerConfig.currentPage = 1\n      this.onSearch()\n    },\n    // 处理查询条件\n    handleQueryFormat(query = {}, columns = []) {\n      const values = {}\n      const stack = [columns] // 使用栈来递归处理列定义\n      // 当栈不为空时循环处理\n      while (stack.length) {\n        const list = stack.pop() // 弹出栈顶元素\n        if (!Array.isArray(list)) continue // 跳过非数组类型\n        // 遍历当前列定义\n        for (const element of list) {\n          const el = element\n          if (Array.isArray(el.children)) {\n            stack.push(el.children) // 递归处理子列\n          }\n          // 当前字段参与查询\n          const condition = el.searchOption\n          if (!this.validatenull(condition)) {\n            const field = !this.validatenull(condition.searchField) ? condition.searchField : el.field\n            const dbTableAlias = !this.validatenull(condition.dbTableAlias) ? `${condition.dbTableAlias}.` : ''\n            const queryType = !this.validatenull(condition.queryType) ? `_${condition.queryType}` : ''\n            const queryKey = `${dbTableAlias}${field}${queryType}` // 构造查询字段\n            const queryValue = query[field] // 获取查询值\n            // 查询字段值存在\n            if (!this.validatenull(queryValue)) {\n              // 查询组件为日期类型时的特殊处理\n              if (this.validatenull(queryType) && Array.isArray(queryValue) && queryValue.length === 2) {\n                values[`${queryKey}_ge`] = queryValue[0] // 日期范围查询的开始值\n                values[`${queryKey}_le`] = queryValue[1] // 日期范围查询的结束值\n              } else {\n                values[queryKey] = queryValue // 普通查询字段赋值\n              }\n            }\n          }\n        }\n      }\n      return values\n    },\n    // 数据加载\n    onLoad(params = {}, isReLoad = false) {\n      const {pagerConfig} = this.option.gridOption\n      this.option.gridOption.loading = true\n      getPage({\n        ...params,\n        size: pagerConfig.pageSize,\n        current: pagerConfig.currentPage,\n        ...this.handleQueryFormat(this.query, this.option.gridColumns)\n      })\n        .then(res => {\n          const {records, total} = res.data.data\n          this.$nextTick(() => {\n            this.$!{dollar-sign}refs.crud.$!{dollar-sign}refs.vxeGridRef[isReLoad $!{question-mark} $!{oblique-point}reloadData$!{oblique-point} : $!{oblique-point}loadData$!{oblique-point}](records)\n            this.selectionClear()\n          })\n          this.option.gridOption.pagerConfig.total = total\n          this.option.gridOption.loading = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.$refs.crud.$refs.vxeGridRef.loadData([])\n          this.option.gridOption.loading = false\n        })\n    },\n  }\n}\n</script>\n"
      }, {
        "name" : "option.js.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"option\", \".js\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/vue\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\nexport const genOption = _this => {\n  return {\n    formOption: {\n      size: 'mini',\n      labelWidth: 110,\n      dialogWidth: '800px',\n      dialogClickModal: false,\n      column: [\n#foreach($column in $tableInfo.fullColumn)\n#if(\n    $!{column.name} != \"id\" && \n    $!{column.name} != \"createTime\" && \n    $!{column.name} != \"createUser\" && \n    $!{column.name} != \"createDept\" && \n    $!{column.name} != \"updateTime\" && \n    $!{column.name} != \"updateUser\" && \n    $!{column.name} != \"tenantId\"   &&\n    $!{column.name} != \"isDeleted\"\n)\n       {\n          label: '${column.comment}',\n          prop: '$!{column.name}',\n          type: 'input',\n       },\n#end\n#end\n      ]\n    },\n    gridOption: {\n      size: 'mini',\n      loading: false,\n      align: 'center',\n      height: 'auto',\n      autoResize: true,\n      scrollX: {enabled: true, gt: 0},\n      scrollY: {enabled: true, gt: 0},\n      border: true,\n      showOverflow: true,\n      showHeaderOverflow: true,\n      showFooterOverflow: true,\n      headerRowStyle: () => 'height:68px',\n      layouts: ['Toolbar', 'Table', 'Pager'],\n      columnConfig: {isCurrent: false, isHover: true, resizable: true, minWidth: 140},\n      rowConfig: {isCurrent: false, isHover: true, keyField: 'id', height: 40},\n      sortConfig: {multiple: true, chronological: true, remote: true, trigger: 'cell'},\n      checkboxConfig: {showHeader: true, highlight: false, checkStrictly: false},\n      pagerConfig: {enabled: true, currentPage: 1, total: 0},\n      toolbarConfig: {custom: false, slots: {buttons: 'toolBarLeft', tools: 'toolBarRight'}},\n      keepSource: false,\n    },\n    gridColumns: [\n      {type: 'checkbox', width: 50, resizable: false, fixed: 'left'},\n      {type: 'seq', title: '序号', width: 50, resizable: false, fixed: 'left'},\n#foreach($column in $tableInfo.fullColumn)\n#if(\n    $!{column.name} != \"id\" && \n    $!{column.name} != \"createTime\" && \n    $!{column.name} != \"createUser\" && \n    $!{column.name} != \"createDept\" && \n    $!{column.name} != \"updateTime\" && \n    $!{column.name} != \"updateUser\" && \n    $!{column.name} != \"tenantId\"   &&\n    $!{column.name} != \"isDeleted\"\n)\n      {\n         title: '${column.comment}',\n         field: '$!{column.name}',\n         slots: {header: '$!{column.name}Header'},\n      },\n#end\n#end\n      {width: 140, title: '操作', fixed: 'right', slots: {default: 'operate'}}\n    ],\n    gridEvents: {\n      'sort-change': ({sortList}) => {\n        const ascs = []\n        const descs = []\n        sortList.map(item => {\n          let sortProp = item.field // 列排序字段名\n          let dbTableAlias = '' // sql查询时使用的表别名\n          const columnField = _this.findObject(_this.option.gridColumns, item.field, 'field')\n          if (!_this.validatenull(columnField.searchOption) && !_this.validatenull(columnField.searchOption.sortProp)) {\n            sortProp = columnField.searchOption.sortProp\n          }\n          if (\n            !_this.validatenull(columnField.searchOption) &&\n            !_this.validatenull(columnField.searchOption.dbTableAlias)\n          ) {\n            dbTableAlias = columnField.searchOption.dbTableAlias\n          }\n          sortProp = _.snakeCase(sortProp)\n          const sortFullProp = !_this.validatenull(dbTableAlias) ? `${dbTableAlias}.${sortProp}` : sortProp\n          item.order === 'asc' && ascs.push(sortFullProp)\n          item.order === 'desc' && descs.push(sortFullProp)\n        })\n        const params = {ascs: ascs.join(','), descs: descs.join(',')}\n        _this.onLoad(params)\n      },\n      'checkbox-change': () => {\n        _this.selectionList = _this.$refs.crud.$refs.vxeGridRef.getCheckboxRecords(false)\n      },\n      'checkbox-all': () => {\n        _this.selectionList = _this.$refs.crud.$refs.vxeGridRef.getCheckboxRecords(false)\n      },\n      'page-change': ({currentPage, pageSize}) => {\n        _this.option.gridOption.pagerConfig.currentPage = currentPage\n        _this.option.gridOption.pagerConfig.pageSize = pageSize\n        _this.onLoad()\n      }\n    }\n  }\n}\n"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}