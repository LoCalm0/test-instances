{
  "author" : "LoCalm",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "cloud",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "boot" : {
      "name" : "boot",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport com.fanh.common.annotation.Log;\nimport com.fanh.common.core.controller.BaseController;\nimport com.fanh.common.core.domain.AjaxResult;\nimport com.fanh.common.core.page.TableDataInfo;\nimport com.fanh.common.enums.BusinessType;\nimport $!{tableInfo.savePackageName}.domain.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;\nimport lombok.AllArgsConstructor;\nimport org.springframework.security.access.prepost.PreAuthorize;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.Set;\n\n/**\n * $!{tableInfo.comment} 表控制层\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@RestController\n@AllArgsConstructor\n@RequestMapping(\"/$!tool.firstLowerCase($tableInfo.name)\")\npublic class $!{tableName} extends BaseController {\n\n    private I$!{tableInfo.name}Service service;\n\n\n    @GetMapping\n    @PreAuthorize(\"@ss.hasPermi('device::page')\")\n    public TableDataInfo page(IotDeviceInfo entity) {\n        startPage();\n        return getDataTable(service.list(entity));\n    }\n\n    @GetMapping(value = \"/{id}\")\n    @PreAuthorize(\"@ss.hasPermi('device::query')\")\n    public AjaxResult getById(@PathVariable(\"id\") Long id) {\n        return success(service.getById(id));\n    }\n\n    @PostMapping\n    @PreAuthorize(\"@ss.hasPermi('device::add')\")\n    @Log(title = \"主机台账\", businessType = BusinessType.INSERT)\n    public AjaxResult save(@RequestBody IotDeviceInfo entity) {\n        return toAjax(service.save(entity));\n    }\n\n    @PutMapping\n    @PreAuthorize(\"@ss.hasPermi('device::edit')\")\n    @Log(title = \"主机台账\", businessType = BusinessType.UPDATE)\n    public AjaxResult updateById(@RequestBody IotDeviceInfo entity) {\n        return toAjax(service.updateById(entity));\n    }\n\n    @DeleteMapping(\"/{ids}\")\n    @PreAuthorize(\"@ss.hasPermi('device::remove')\")\n    @Log(title = \"主机台账\", businessType = BusinessType.DELETE)\n    public AjaxResult removeByIds(@PathVariable Set<Long> ids) {\n        return toAjax(service.removeByIds(ids));\n    }\n\n}\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/domain\", \".java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"domain\")\n\nimport lombok.Data;\n\n##使用全局变量实现默认包导入\nimport java.io.Serializable;\n$!{autoImport.vm}\n\n\n/**\n * $!{tableInfo.comment} 实体类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@Data\npublic class $!{tableInfo.name} implements Serializable {\n\n#foreach($column in $tableInfo.fullColumn)\n\t/** ${column.comment} */\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n#foreach($column in $tableInfo.fullColumn)\n#end\n\n}\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Service\"))\n##设置回调\n$!callback.setFileName($tool.append(\"I\",$tool.append($tableName, \".java\")))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{tableInfo.savePackageName}.domain.$!{tableInfo.name};\n\nimport java.util.List;\nimport java.util.Set;\n\n/**\n * $!{tableInfo.comment} 服务类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\npublic interface I$!{tableName} {\n\n    $!{tableInfo.name} getById(Long id);\n\n    List<$!{tableInfo.name}> list(IotDeviceInfo entity);\n\n    boolean save($!{tableInfo.name} entity);\n\n    boolean updateById($!{tableInfo.name} entity);\n\n    boolean removeByIds(Set<Long> ids);\n\n}\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"ServiceImpl\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport com.fanh.common.utils.sql.SqlHelper;\nimport $!{tableInfo.savePackageName}.domain.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\nimport java.util.Set;\n\n/**\n * $!{tableInfo.comment} 服务实现类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@Service\n@AllArgsConstructor\npublic class $!{tableName} implements I$!{tableInfo.name}Service {\n\n    private final IotDeviceInfoMapper mapper;\n\n    @Override\n    public $!{tableInfo.name} getById(Long id) {\n        return mapper.getById(id);\n    }\n\n    @Override\n    public List<$!{tableInfo.name}> list($!{tableInfo.name} entity) {\n        return mapper.list(entity);\n    }\n\n    @Override\n    public boolean save($!{tableInfo.name} entity) {\n        entity.setCreateTime(LocalDateTime.now());\n        return SqlHelper.retBool(mapper.save(entity));\n    }\n\n    @Override\n    public boolean updateById($!{tableInfo.name} entity) {\n        return SqlHelper.retBool(mapper.updateById(entity));\n    }\n\n    @Override\n    public boolean removeByIds(Set<Long> ids) {\n        return SqlHelper.retBool(mapper.removeByIds(ids));\n    }\n\n}\n"
      }, {
        "name" : "mapper.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Mapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}mapper;\n\nimport $!{tableInfo.savePackageName}.domain.$!{tableInfo.name};\n\nimport java.util.List;\nimport java.util.Set;\n\n/**\n * $!{tableInfo.comment} Mapper 接口\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\npublic interface $!{tableInfo.name}Mapper {\n\n    $!{tableInfo.name} getById(Long id);\n\n    List<$!{tableInfo.name}> list($!{tableInfo.name} entity);\n\n    int save($!{tableInfo.name} entity);\n\n    int updateById($!{tableInfo.name} entity);\n\n    int removeByIds(Set<Long> ids);\n\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n  \n    <sql id=\"select\">\n        SELECT #foreach($column in $tableInfo.fullColumn)$tool.hump2Underline($!{column.name})#if($foreach.count != $tableInfo.fullColumn.size()), #end#end FROM $tool.hump2Underline(${tableInfo.name})\n    </sql>\n\n    <select id=\"getById\" resultType=\"$!{tableInfo.savePackageName}.domain.$!{tableInfo.name}\">\n        <include refid=\"select\" />\n        WHERE id = #{id}\n    </select>\n\n    <select id=\"list\" resultType=\"$!{tableInfo.savePackageName}.domain.$!{tableInfo.name}\">\n        <include refid=\"select\" />\n    </select>\n\n    <insert id=\"save\">\n        INSERT INTO $tool.hump2Underline(${tableInfo.name})\n        <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\n#foreach ($column in $tableInfo.fullColumn)\n            <if test=\"$!{column.name} != null\">$tool.hump2Underline($!{column.name}),</if>\n#end\n        </trim>\n        <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\">\n#foreach ($column in $tableInfo.fullColumn)\n            <if test=\"$!{column.name} != null\">#{$!{column.name}},</if>\n#end\n        </trim>\n    </insert>\n\n    <update id=\"updateById\">\n        UPDATE $tool.hump2Underline(${tableInfo.name})\n        <trim prefix=\"SET\" suffixOverrides=\",\">\n#foreach ($column in $tableInfo.fullColumn)\n#if($!{column.name} != \"id\")\n            <if test=\"$!{column.name} != null\">$tool.hump2Underline($!{column.name}) = #{$!{column.name}},</if>\n#end\n#end\n        </trim>\n        WHERE id = #{id}\n    </update>\n\n    <delete id=\"removeByIds\">\n        DELETE FROM $tool.hump2Underline(${tableInfo.name}) WHERE id IN\n        <foreach item=\"id\" collection=\"collection\" open=\"(\" separator=\",\" close=\")\">\n            #{id}\n        </foreach>\n    </delete>\n    \n</mapper>\n"
      }, {
        "name" : "vo.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"VO\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/vo\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}vo;\n\nimport $!{tableInfo.savePackageName}.domain.$!{tableInfo.name};\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n\n/**\n * $!{tableInfo.comment} 视图实体类\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\n@Data\n@EqualsAndHashCode(callSuper = true)\npublic class $!{tableInfo.name}VO extends $!{tableInfo.name} {\n}\n"
      }, {
        "name" : "wrapper.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Wrapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/wrapper\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}wrapper;\n\n/**\n * $!{tableInfo.comment} 包装类,返回视图层所需的字段\n *\n * @author $!author\n * @since $!time.currTime(\"yyyy-MM-dd\")\n */\npublic class $!{tableName} {\n\n    public static $!{tableInfo.name}Wrapper build() {\n        return new $!{tableInfo.name}Wrapper();\n    }\n\n\n}\n"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}